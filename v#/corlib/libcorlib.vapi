/* libcorlib.vapi generated by valac 0.26.1, do not modify. */

namespace System {
	[CCode (cheader_filename = "libcorlib.h")]
	public class ControlCharacters {
		public const int Discard;
		public const int EOF;
		public const int EOL;
		public const int EOL2;
		public const int Erase;
		public const int Intr;
		public const int Kill;
		public const int LNext;
		public const int Min;
		public const int Quit;
		public const int Reprint;
		public const int SWTC;
		public const int Start;
		public const int Stop;
		public const int Susp;
		public const int Time;
		public const int WErase;
		public ControlCharacters ();
	}
	[CCode (cheader_filename = "libcorlib.h")]
	public interface IAppDomainSetup {
		public abstract string ApplicationBase { get; set; }
		public abstract string ApplicationName { get; set; }
		public abstract string CachePath { get; set; }
		public abstract string ConfigurationFile { get; set; }
		public abstract string DynamicBase { get; set; }
		public abstract string LicenseFile { get; set; }
		public abstract string PrivateBinPath { get; set; }
		public abstract string PrivateBinPathProbe { get; set; }
		public abstract string ShadowCopyDirectories { get; set; }
		public abstract string ShadowCopyFiles { get; set; }
	}
	[CCode (cheader_filename = "libcorlib.h")]
	public interface ICloneable {
		public abstract GLib.Object Clone ();
	}
	[CCode (cheader_filename = "libcorlib.h")]
	public interface IDisposable {
	}
	[CCode (cheader_filename = "libcorlib.h")]
	public interface IEquatable<T> : GLib.Object {
		public abstract bool Equals (T other);
	}
	[CCode (cheader_filename = "libcorlib.h")]
	public interface IObserver<T> : GLib.Object {
		public abstract void OnCompleted ();
		public abstract void OnNext (T value);
	}
	[CCode (cheader_filename = "libcorlib.h")]
	public struct EmptyArray<T> {
		public T[] Value;
		public EmptyArray ();
	}
	[CCode (cheader_filename = "libcorlib.h")]
	[Flags]
	public enum AppDomainManagerInitializationOptions {
		None,
		RegisterWithHost
	}
	[CCode (cheader_filename = "libcorlib.h")]
	[Flags]
	[Serializable]
	public enum AttributeTargets {
		Assembly,
		Module,
		Class,
		Struct,
		Enum,
		Constructor,
		Method,
		Property,
		Field,
		Event,
		Interface,
		Parameter,
		Delegate,
		ReturnValue,
		GenericParameter,
		All
	}
	[CCode (cheader_filename = "libcorlib.h")]
	[Flags]
	public enum Base64FormattingOptions {
		InsertLineBreaks,
		None
	}
	[CCode (cheader_filename = "libcorlib.h")]
	[Serializable]
	public enum ConsoleColor {
		Black,
		DarkBlue,
		DarkGreen,
		DarkCyan,
		DarkRed,
		DarkMagenta,
		DarkYellow,
		Gray,
		DarkGray,
		Blue,
		Green,
		Cyan,
		Red,
		Magenta,
		Yellow,
		White
	}
	[CCode (cheader_filename = "libcorlib.h")]
	[Flags]
	[Serializable]
	public enum ConsoleModifiers {
		Alt,
		Shift,
		Control
	}
	[CCode (cheader_filename = "libcorlib.h")]
	[Serializable]
	public enum ConsoleSpecialKey {
		ControlC,
		ControlBreak
	}
	[CCode (cheader_filename = "libcorlib.h")]
	[Serializable]
	public enum DateTimeKind {
		Unspecified,
		Utc,
		Local
	}
	[CCode (cheader_filename = "libcorlib.h")]
	[Serializable]
	public enum DayOfWeek {
		Sunday,
		Monday,
		Tuesday,
		Wednesday,
		Thursday,
		Friday,
		Saturday
	}
	[CCode (cheader_filename = "libcorlib.h")]
	public enum EnvironmentVariableTarget {
		Process,
		User,
		Machine
	}
	[CCode (cheader_filename = "libcorlib.h")]
	public enum MidpointRounding {
		ToEven,
		AwayFromZero
	}
	[CCode (cheader_filename = "libcorlib.h")]
	[Serializable]
	public enum PlatformID {
		Win32S,
		Win32Windows,
		Win32NT,
		WinCE,
		Unix,
		Xbox,
		MacOSX
	}
	[CCode (cheader_filename = "libcorlib.h")]
	[Serializable]
	public enum StringComparison {
		CurrentCulture,
		CurrentCultureIgnoreCase,
		InvariantCulture,
		InvariantCultureIgnoreCase,
		Ordinal,
		OrdinalIgnoreCase
	}
	[CCode (cheader_filename = "libcorlib.h")]
	[Flags]
	public enum StringSplitOptions {
		None,
		RemoveEmptyEntries
	}
	[CCode (cheader_filename = "libcorlib.h")]
	[Serializable]
	public enum TypeCode {
		Empty,
		Object,
		DBNull,
		Boolean,
		Char,
		SByte,
		Byte,
		Int16,
		UInt16,
		Int32,
		UInt32,
		Int64,
		UInt64,
		Single,
		Double,
		Decimal,
		DateTime,
		String
	}
}
